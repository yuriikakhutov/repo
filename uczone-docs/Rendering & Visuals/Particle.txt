# Particle

Table to work with particles.

## <sub>Create</sub>

`Particle.Create(particle, [attach_type], [entity]):` <mark style="color:purple;">**`integer`**</mark>

| Name                                                               | Type                                                                                                                                  | Description                                                                                                   |
| ------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------- |
| **particle**                                                       | <mark style="color:purple;">**`string`**</mark>                                                                                       | Particle path                                                                                                 |
| **attach\_type&#x20;**<mark style="color:orange;">**`[?]`**</mark> | [<mark style="color:purple;">**`Enum.ParticleAttachment`**</mark>](../../../cheats-types-and-callbacks/enums#enum.particleattachment) | attach\_type Attach type `(default: Enum.ParticleAttachment.PATTACH_WORLDORIGIN)`                             |
| **entity&#x20;**<mark style="color:orange;">**`[?]`**</mark>       | [<mark style="color:purple;">**`CEntity`**</mark>](../core/entity)                                                                    | Entity to own of the particle. If not specified, the local hero will be used. `(default: Players.GetLocal())` |

Creates a particle and returns its index.

## <sub>SetControlPoint</sub>

`Particle.SetControlPoint(particle_index, control_point, value):` <mark style="color:purple;">**`nil`**</mark>

| Name                | Type                                                                                                    | Description         |
| ------------------- | ------------------------------------------------------------------------------------------------------- | ------------------- |
| **particle\_index** | <mark style="color:purple;">**`integer`**</mark>                                                        | Particle index      |
| **control\_point**  | <mark style="color:purple;">**`integer`**</mark>                                                        | Control point       |
| **value**           | [<mark style="color:purple;">**`Vector`**</mark>](../../cheats-types-and-callbacks/classes/math/vector) | Control point value |

Sets the control point value of a particle.

## <sub>SetShouldDraw</sub>

`Particle.SetShouldDraw(particle_index, value):` <mark style="color:purple;">**`nil`**</mark>

| Name                | Type                                             | Description    |
| ------------------- | ------------------------------------------------ | -------------- |
| **particle\_index** | <mark style="color:purple;">**`integer`**</mark> | Particle index |
| **value**           | <mark style="color:purple;">**`bool`**</mark>    | set value      |

Enables or disables the drawing of a particle.

## <sub>SetControlPointEnt</sub>

`Particle.SetControlPointEnt(particle_index, control_point, entity, attach_type, attach_name, position, lock_orientation):` <mark style="color:purple;">**`nil`**</mark>

| Name                  | Type                                                                                                                                  | Description                                   |
| --------------------- | ------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------- |
| **particle\_index**   | <mark style="color:purple;">**`integer`**</mark>                                                                                      | Particle index                                |
| **control\_point**    | <mark style="color:purple;">**`integer`**</mark>                                                                                      | Control point                                 |
| **entity**            | [<mark style="color:purple;">**`CEntity`**</mark>](../core/entity)                                                                    | Entity to attach                              |
| **attach\_type**      | [<mark style="color:purple;">**`Enum.ParticleAttachment`**</mark>](../../../cheats-types-and-callbacks/enums#enum.particleattachment) | Attach type                                   |
| **attach\_name**      | <mark style="color:purple;">**`string`**</mark> \| <mark style="color:purple;">**`nil`**</mark>                                       | Attach name. See `NPC.GetAttachment` function |
| **position**          | [<mark style="color:purple;">**`Vector`**</mark>](../../cheats-types-and-callbacks/classes/math/vector)                               | Control point position                        |
| **lock\_orientation** | <mark style="color:purple;">**`boolean`**</mark>                                                                                      | Lock orientation. No idea what it does        |

Sets the control point entity value of a particle.

## <sub>SetParticleControlTransform</sub>

`Particle.SetParticleControlTransform(particle_index, control_point, position, angle):` <mark style="color:purple;">**`nil`**</mark>

| Name                | Type                                                                                                    | Description            |
| ------------------- | ------------------------------------------------------------------------------------------------------- | ---------------------- |
| **particle\_index** | <mark style="color:purple;">**`integer`**</mark>                                                        | Particle index         |
| **control\_point**  | <mark style="color:purple;">**`integer`**</mark>                                                        | Control point          |
| **position**        | [<mark style="color:purple;">**`Vector`**</mark>](../../cheats-types-and-callbacks/classes/math/vector) | Control point position |
| **angle**           | [<mark style="color:purple;">**`Angle`**</mark>](../../cheats-types-and-callbacks/classes/math/angle)   | Control point angle    |

Sets the control point's position and angle.

## <sub>Destroy</sub>

`Particle.Destroy(particle_index):` <mark style="color:purple;">**`nil`**</mark>

| Name                | Type                                             | Description    |
| ------------------- | ------------------------------------------------ | -------------- |
| **particle\_index** | <mark style="color:purple;">**`integer`**</mark> | Particle index |

Destroys the particle by index.
