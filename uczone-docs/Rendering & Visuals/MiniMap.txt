# MiniMap

Table to work with in-game minimap.

## <sub>Ping</sub>

`MiniMap.Ping(pos, type):` <mark style="color:purple;">**`nil`**</mark>

| Name     | Type                                                                                                              | Description            |
| -------- | ----------------------------------------------------------------------------------------------------------------- | ---------------------- |
| **pos**  | [<mark style="color:purple;">**`Vector`**</mark>](../../cheats-types-and-callbacks/classes/math/vector)           | world position to ping |
| **type** | [<mark style="color:purple;">**`Enum.PingType`**</mark>](../../../cheats-types-and-callbacks/enums#enum.pingtype) | ping type              |

Pings on the minimap.

## <sub>SendLine</sub>

`MiniMap.SendLine(pos, initial, clientside):` <mark style="color:purple;">**`nil`**</mark>

| Name           | Type                                                                                                    | Description                                       |
| -------------- | ------------------------------------------------------------------------------------------------------- | ------------------------------------------------- |
| **pos**        | [<mark style="color:purple;">**`Vector`**</mark>](../../cheats-types-and-callbacks/classes/math/vector) | world position to draw line to                    |
| **initial**    | <mark style="color:purple;">**`boolean`**</mark>                                                        | start a new line, otherwise continue the last one |
| **clientside** | <mark style="color:purple;">**`boolean`**</mark>                                                        | draw only for local player                        |

Draws a line on the minimap.

## <sub>SendLine</sub>

`MiniMap.SendLine(x, y, initial, clientside):` <mark style="color:purple;">**`nil`**</mark>

| Name           | Type                                             | Description                                       |
| -------------- | ------------------------------------------------ | ------------------------------------------------- |
| **x**          | <mark style="color:purple;">**`number`**</mark>  | x world position to draw line                     |
| **y**          | <mark style="color:purple;">**`number`**</mark>  | y world position to draw line                     |
| **initial**    | <mark style="color:purple;">**`boolean`**</mark> | start a new line, otherwise continue the last one |
| **clientside** | <mark style="color:purple;">**`boolean`**</mark> | draw only for local player                        |

Draws a line on the minimap.

## <sub>DrawCircle</sub>

`MiniMap.DrawCircle(pos, [r], [g], [b], [a], [size]):` <mark style="color:purple;">**`nil`**</mark>

| Name                                                       | Type                                                                                                    | Description                   |
| ---------------------------------------------------------- | ------------------------------------------------------------------------------------------------------- | ----------------------------- |
| **pos**                                                    | [<mark style="color:purple;">**`Vector`**</mark>](../../cheats-types-and-callbacks/classes/math/vector) | world position to draw circle |
| **r&#x20;**<mark style="color:orange;">**`[?]`**</mark>    | <mark style="color:purple;">**`integer`**</mark>                                                        | red color `(default: 255)`    |
| **g&#x20;**<mark style="color:orange;">**`[?]`**</mark>    | <mark style="color:purple;">**`integer`**</mark>                                                        | green color `(default: 255)`  |
| **b&#x20;**<mark style="color:orange;">**`[?]`**</mark>    | <mark style="color:purple;">**`integer`**</mark>                                                        | blue color `(default: 255)`   |
| **a&#x20;**<mark style="color:orange;">**`[?]`**</mark>    | <mark style="color:purple;">**`integer`**</mark>                                                        | alpha color `(default: 255)`  |
| **size&#x20;**<mark style="color:orange;">**`[?]`**</mark> | <mark style="color:purple;">**`number`**</mark>                                                         | circle size `(default: 800)`  |

Draws a circle on the minimap.

## <sub>DrawHeroIcon</sub>

`MiniMap.DrawHeroIcon(unitName, pos, [r], [g], [b], [a], [size]):` <mark style="color:purple;">**`nil`**</mark>

| Name                                                       | Type                                                                                                    | Description                                               |
| ---------------------------------------------------------- | ------------------------------------------------------------------------------------------------------- | --------------------------------------------------------- |
| **unitName**                                               | <mark style="color:purple;">**`string`**</mark>                                                         | unit name to draw icon. Can get it from `NPC.GetUnitName` |
| **pos**                                                    | [<mark style="color:purple;">**`Vector`**</mark>](../../cheats-types-and-callbacks/classes/math/vector) | world position to draw icon                               |
| **r&#x20;**<mark style="color:orange;">**`[?]`**</mark>    | <mark style="color:purple;">**`integer`**</mark>                                                        | red color `(default: 255)`                                |
| **g&#x20;**<mark style="color:orange;">**`[?]`**</mark>    | <mark style="color:purple;">**`integer`**</mark>                                                        | green color `(default: 255)`                              |
| **b&#x20;**<mark style="color:orange;">**`[?]`**</mark>    | <mark style="color:purple;">**`integer`**</mark>                                                        | blue color `(default: 255)`                               |
| **a&#x20;**<mark style="color:orange;">**`[?]`**</mark>    | <mark style="color:purple;">**`integer`**</mark>                                                        | alpha color `(default: 255)`                              |
| **size&#x20;**<mark style="color:orange;">**`[?]`**</mark> | <mark style="color:purple;">**`number`**</mark>                                                         | icon size `(default: 800)`                                |

Draws a hero icon on the minimap.

## <sub>DrawIconByName</sub>

`MiniMap.DrawIconByName(iconName, pos, [r], [g], [b], [a], [size]):` <mark style="color:purple;">**`nil`**</mark>

| Name                                                       | Type                                                                                                    | Description                                                             |
| ---------------------------------------------------------- | ------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------- |
| **iconName**                                               | <mark style="color:purple;">**`string`**</mark>                                                         | could get it from game\dota\pak01\_dir.vpk (scripts\mod\_textures.txt). |
| **pos**                                                    | [<mark style="color:purple;">**`Vector`**</mark>](../../cheats-types-and-callbacks/classes/math/vector) | world position to draw icon                                             |
| **r&#x20;**<mark style="color:orange;">**`[?]`**</mark>    | <mark style="color:purple;">**`integer`**</mark>                                                        | red color `(default: 255)`                                              |
| **g&#x20;**<mark style="color:orange;">**`[?]`**</mark>    | <mark style="color:purple;">**`integer`**</mark>                                                        | green color `(default: 255)`                                            |
| **b&#x20;**<mark style="color:orange;">**`[?]`**</mark>    | <mark style="color:purple;">**`integer`**</mark>                                                        | blue color `(default: 255)`                                             |
| **a&#x20;**<mark style="color:orange;">**`[?]`**</mark>    | <mark style="color:purple;">**`integer`**</mark>                                                        | alpha color `(default: 255)`                                            |
| **size&#x20;**<mark style="color:orange;">**`[?]`**</mark> | <mark style="color:purple;">**`number`**</mark>                                                         | icon size `(default: 800)`                                              |

Draws a icon on the minimap.

## <sub>GetMousePosInWorld</sub>

`MiniMap.GetMousePosInWorld():` [<mark style="color:purple;">**`Vector`**</mark>](../../cheats-types-and-callbacks/classes/math/vector)

Returns world position the mouse on the minimap, if the mouse is not on the minimap, it will return (0,0,0).

## <sub>IsCursorOnMinimap</sub>

`MiniMap.IsCursorOnMinimap():` <mark style="color:purple;">**`boolean`**</mark>

Returns `true` if the mouse is on the minimap.

## <sub>GetMinimapToWorld</sub>

`MiniMap.GetMinimapToWorld(ScreenX, ScreenY):` [<mark style="color:purple;">**`Vector`**</mark>](../../cheats-types-and-callbacks/classes/math/vector)

| Name        | Type                                             | Description |
| ----------- | ------------------------------------------------ | ----------- |
| **ScreenX** | <mark style="color:purple;">**`integer`**</mark> |             |
| **ScreenY** | <mark style="color:purple;">**`integer`**</mark> |             |

Returns world position from minimap position. The same as `GetMousePosInWorld`, but you can pass any position on screen, not only mouse position.
